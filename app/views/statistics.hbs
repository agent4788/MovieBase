<script src="/static/js/rgraph/RGraph.common.core.js"></script>
<script src="/static/js/rgraph/RGraph.common.dynamic.js"></script>
<script src="/static/js/rgraph/RGraph.common.tooltips.js"></script>
<script src="/static/js/rgraph/RGraph.common.key.js"></script>
<script src="/static/js/rgraph/RGraph.bar.js"></script>
<script src="/static/js/rgraph/RGraph.pie.js"></script>
<script type="text/javascript">
    var purchaseAtYearKeys = [
        {{#each purchaseAtYearKeys}}"{{this}}",{{/each}}
    ];
    var purchaseAtYearData = [
        {{#each purchaseAtYearData}}"{{this}}",{{/each}}
    ];
    var costAtYearKeys = [
        {{#each costAtYearKeys}}"{{this}}",{{/each}}
    ];
    var costAtYearData = [
        {{#each costAtYearData}}"{{this}}",{{/each}}
    ];
    var avgCostAtYearKeys = [
        {{#each avgCostAtYearKeys}}"{{this}}",{{/each}}
    ];
    var avgCostAtYearData = [
        {{#each avgCostAtYearData}}"{{this}}",{{/each}}
    ];
    var genresKeys = [
        {{#each genresKeys}}"{{this}}",{{/each}}
    ];
    var genresData = [
        {{#each genresData}}"{{this}}",{{/each}}
    ];
    var ratingKeys = [
        {{#each ratingKeys}}"{{this}}",{{/each}}
    ];
    var ratingData = [
        {{#each ratingData}}"{{this}}",{{/each}}
    ];
    var discsKeys = [
        {{#each discsKeys}}"{{this}}",{{/each}}
    ];
    var discsData = [
        {{#each discsData}}"{{this}}",{{/each}}
    ];

    var colors = ['#86B5BC','#E30513','#1C1C1B','#86BC24','#E5007D','#2F8DCD','#F9D900','#F6A200','#BCBCBC'];

    $(function() {

        new RGraph.Bar({
            id: 'purchase',
            data: purchaseAtYearData,
            options: {
                labelsAbove: true,
                labelsAboveDecimals: 0,
                labelsAboveColor: 'black',
                labelsAboveSize: 10,
                hmargin: 20,
                colors: colors,
                colorsSequential: true,
                labels: purchaseAtYearKeys,
                textSize: 10,
                textColor: 'gray',
                backgroundGridVlines: false,
                backgroundGridAutofitNumhlines: 4,
                backgroundGridBorder: false,
                noaxes: true,
                ylabelsCount: 4,
                titleX: 25,
                titleY: 0,
                titleHalign: 'left',
                titleColor: '#999',
                ylabelsOffsetx: -10
            }
        }).grow({frames: 60});

        new RGraph.Bar({
            id: 'price',
            data: costAtYearData,
            options: {
                unitsPost: ' €',
                labelsAbove: true,
                labelsAboveDecimals: 0,
                labelsAboveUnitsPost: '€',
                labelsAboveColor: 'black',
                labelsAboveSize: 10,
                hmargin: 20,
                colors: colors,
                colorsSequential: true,
                labels: costAtYearKeys,
                textSize: 10,
                textColor: 'gray',
                backgroundGridVlines: false,
                backgroundGridAutofitNumhlines: 4,
                backgroundGridBorder: false,
                noaxes: true,
                ylabelsCount: 4,
                titleX: 25,
                titleY: 0,
                titleHalign: 'left',
                titleColor: '#999',
                ylabelsOffsetx: -10
            }
        }).grow({frames: 60});

        new RGraph.Bar({
            id: 'avgPrice',
            data: avgCostAtYearData,
            options: {
                unitsPost: ' €',
                labelsAbove: true,
                labelsAboveDecimals: 2,
                labelsAboveUnitsPost: '€',
                labelsAboveColor: 'black',
                labelsAboveSize: 10,
                hmargin: 20,
                colors: colors,
                colorsSequential: true,
                labels: avgCostAtYearKeys,
                textSize: 10,
                textColor: 'gray',
                backgroundGridVlines: false,
                backgroundGridAutofitNumhlines: 4,
                backgroundGridBorder: false,
                noaxes: true,
                ylabelsCount: 4,
                titleX: 25,
                titleY: 0,
                titleHalign: 'left',
                titleColor: '#999',
                ylabelsOffsetx: -10
            }
        }).grow({frames: 60});

        let keys = [];
        for (let i = 0; i < genresData.length; i++) {
            keys[i] = '{1}: {2}'.format(genresKeys[i], genresData[i]);
        }

        RGraph.HTML.Key('genresContainer',
                {
                    colors: colors,
                    labels: keys,
                    tableCss: {
                        position: 'absolute',
                        top: '50%',
                        right: '-70px',
                        transform: 'translateY(-50%)'
                    }
                });

        new RGraph.Pie({
            id: 'genres',
            data: genresData,
            options: {
                gutterLeft: 50,
                gutterRight: 50,
                linewidth: 0,
                strokestyle: 'rgba(0,0,0,0)',
                colors: colors,
                variant: 'pie3d',
                radius: 100,
                radius: 80,
                shadowOffsety: 5,
                shadowColor: '#aaa',
                exploded: [,,20]
            }
        }).draw();

        keys = [];
        for (let i = 0; i < ratingData.length; i++) {
            keys[i] = '{1}: {2}'.format(ratingKeys[i], ratingData[i]);
        }

        RGraph.HTML.Key('ratingContainer',
                {
                    colors: colors,
                    labels: keys,
                    tableCss: {
                        position: 'absolute',
                        top: '50%',
                        right: '-70px',
                        transform: 'translateY(-50%)'
                    }
                });

        new RGraph.Pie({
            id: 'ratings',
            data: ratingData,
            options: {
                gutterLeft: 50,
                gutterRight: 50,
                linewidth: 0,
                strokestyle: 'rgba(0,0,0,0)',
                colors: colors,
                variant: 'pie3d',
                radius: 100,
                radius: 80,
                shadowOffsety: 5,
                shadowColor: '#aaa',
                exploded: [,,20]
            }
        }).draw();

        keys = [];
        for (let i = 0; i < discsData.length; i++) {
            keys[i] = '{1}: {2}'.format(discsKeys[i], discsData[i]);
        }

        RGraph.HTML.Key('discContainer',
                {
                    colors: colors,
                    labels: keys,
                    tableCss: {
                        position: 'absolute',
                        top: '50%',
                        right: '-70px',
                        transform: 'translateY(-50%)'
                    }
                });

        new RGraph.Pie({
            id: 'discs',
            data: discsData,
            options: {
                gutterLeft: 50,
                gutterRight: 50,
                linewidth: 0,
                strokestyle: 'rgba(0,0,0,0)',
                colors: colors,
                variant: 'pie3d',
                radius: 100,
                radius: 80,
                shadowOffsety: 5,
                shadowColor: '#aaa',
                exploded: [,,20]
            }
        }).draw();
    });
</script>
<div class="ui segment">
    <h2 class="ui header">Statistik</h2>
    <div class="ui divider"></div>
    <table class="ui celled table">
        <tbody>
        <tr>
            <td>Anzahl Filme:</td>
            <td>{{movieCount}}</td>
        </tr>
        <tr>
            <td>Anzahl Filmboxen:</td>
            <td>{{movieBoxCount}}</td>
        </tr>
        <tr>
            <td>Gsamtl&auml;nge:</td>
            <td>{{sumDuration}}</td>
        </tr>
        <tr>
            <td>Durchschnittsl&auml;nge:</td>
            <td>{{avgDuration}}</td>
        </tr>
        <tr>
            <td>Gesamtpreis:</td>
            <td>{{sumPrice}}&euro;</td>
        </tr>
        <tr>
            <td>Durchschnittspreis:</td>
            <td>{{avgPrice}}&euro;</td>
        </tr>
        <tr>
            <td>Durchschnittsbewertung:</td>
            <td>
                <div class="ui rating star large" id="avgRating" data-rating="{{avgRating}}" data-max-rating="5"></div>
                <script type="text/javascript">
                    $(function() {
                        $('#avgRating').rating('disable');
                    });
                </script>
            </td>
        </tr>
        </tbody>
    </table>
    <h3 class="ui header">Anzahl gekaufter Filme</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <canvas id="purchase" width="800" height="400">
            [No canvas support]
        </canvas>
    </div>
    <h3 class="ui header">Preis gekaufter Filme</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <canvas id="price" width="800" height="400">
            [No canvas support]
        </canvas>
    </div>
    <h3 class="ui header">mittlerer Preis gekaufter Filme</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <canvas id="avgPrice" width="800" height="400">
            [No canvas support]
        </canvas>
    </div>
    <h3 class="ui header">Genres</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <div id="genresContainer" style="display: inline-block; position: relative">
            <canvas id="genres" width="500" height="350">[No canvas support]</canvas>
        </div>
    </div>
    <h3 class="ui header">Medien</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <div id="discContainer" style="display: inline-block; position: relative">
            <canvas id="discs" width="500" height="350">[No canvas support]</canvas>
        </div>
    </div>
    <h3 class="ui header">Bewertungen</h3>
    <div class="ui divider"></div>
    <div style="width: 800px; margin: 25px auto;">
        <div id="ratingContainer" style="display: inline-block; position: relative">
            <canvas id="ratings" width="500" height="350">[No canvas support]</canvas>
        </div>
    </div>
</div>
